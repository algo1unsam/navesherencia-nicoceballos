import naves.*

describe "Nave de carga" {

	const naveVacia = new NaveDeCarga()
	const naveLlena = new NaveDeCarga(carga = 500000, velocidad = 290000)

	test "Propulsar"{
		naveVacia.propulsar()
		assert.equals(15000,naveVacia.velocidad())
	}
	test "Sobrecargada" {
		assert.that(naveLlena.sobrecargada())
	}

	test "No sobrecargada" {
		assert.notThat(naveVacia.sobrecargada())
	}

	test "Excedida de velocidad" {
		assert.that(naveLlena.excedidaDeVelocidad())
	}

	test "No excedida de velocidad" {
		assert.notThat(naveVacia.excedidaDeVelocidad())
	}

	test "Recibir amenaza" {
		naveLlena.recibirAmenaza()
		assert.equals(0, naveVacia.carga())
	}

}
describe "Nave de carga radioactiva"{
	const naveRadioactiva = new NavedeCargaRadioactiva(carga=5000, velocidad =10000)
	
	test "Recibir amenaza"{
		naveRadioactiva.recibirAmenaza()
		assert.that(naveRadioactiva.sellada())
		assert.equals(0,naveRadioactiva.velocidad())
	}
	test "Preparar"{
		naveRadioactiva.preparar()
		assert.that(naveRadioactiva.sellada())
		assert.equals(15000,naveRadioactiva.velocidad())
			
	}
}

describe "Nave de pasajeros" {

	const naveSinPasajeros = new NaveDePasajeros()
	const naveConPasajeros = new NaveDePasajeros(cantidadDePasajeros = 296, velocidad = 290000)


	test "Propulsar"{
		naveConPasajeros.propulsar()
		assert.equals(300000,naveConPasajeros.velocidad())
	}
	test "Velocidad maxima sin pasajeros" {
		assert.equals(75000, naveSinPasajeros.velocidadMaximaLegal())
	}

	test "Velocidad maxima con pasajeros" {
		assert.equals(1000 - 200, naveConPasajeros.velocidadMaximaLegal())
	}

	test "Esta en peligro" {
		assert.that(naveConPasajeros.estaEnPeligro())
	}

	test "No esta en peligro" {
		assert.notThat(naveSinPasajeros.estaEnPeligro())
	}

	test "Recibir amenaza" {
		naveSinPasajeros.recibirAmenaza()
		assert.that(naveSinPasajeros.alarma())
	}
}

describe "Nave de combate" {

	const naveEnReposo = new NaveDeCombate()
	const naveEnAtaque = new NaveDeCombate(modo = ataque)

	test "No esta invisible en reposo" {
		assert.notThat(naveEnReposo.estaInvisible())
	}

	test "Esta invisible en ataque" {
		assert.that(naveEnAtaque.estaInvisible())
	}

	test "No esta invisible en ataque" {
		naveEnAtaque.velocidad(20000)
		assert.notThat(naveEnAtaque.estaInvisible())
	}

	test "Recibir amenaza en reposo" {
		naveEnReposo.recibirAmenaza()
		assert.equals("¡RETIRADA!", naveEnReposo.ultimoMensaje())
	}

	test "Recibir amenaza en ataque" {
		naveEnAtaque.recibirAmenaza()
		assert.equals("Enemigo encontrado", naveEnAtaque.ultimoMensaje())
	}
	test "Prepara en reposo"{
		naveEnReposo.preparar()
		assert.equals(15000,naveEnReposo.velocidad())
		assert.equals(ataque, naveEnReposo.modo())
		assert.equals("Saliendo en misión", naveEnReposo.ultimoMensaje())
	}
}


